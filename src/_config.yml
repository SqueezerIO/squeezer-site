# Site settings
title: Squeezer.IO - Event-driven APIs and Webapps on microservices ... serverless
email: nick@squeezer.io
url: https://Squeezer.IO
gitUrl: https://github.com/SqueezerIO/squeezer-cli
description: "Squeezer.IO it's a framework designed to help developers to get a better architecture on serverless zero-administration compute platforms with code that runs into microservices clouds like AWS Lambda"
skills: "Web Developer - Graphic Artist - User Experience Designer"
meta_author: Nick Chisiu

# Google webmaster tools
google_verify:

# https://ssl.bing.com/webmaster/configure/verify/ownership Option 2 content= goes here
bing_verify:

# Contact form:
#Â - static : pass through formspree.io to validate email sending
# - disqus : replace contact form by disqus thread
# - comment the line below if you want to stick with the default PHP contact form
#contact: static

# If you use disqus you need disqus shortname
# https://help.disqus.com/customer/portal/articles/466208
disqus_shortname: myshortname

# Color settings (hex-codes without the leading hash-tag)
color:
  primary: 4d79ff #80B3FF
  primary-rgb: "56,117,216" #"128,179,255"
  secondary: 426b93 #FD6E8A
  secondary-dark: 233140 #A2122F

# Footer settings
footer:
  copyright: Squeezer.IO
  location: Location
  social: Around the Web
  credits: Credits

# features
features:
  - title: auto scaling on-demand
    img: autoscaling.png
    description: |
      Don't worry about scalability. The microservice's platforms are taking care to add as many resources you need <b>on-the-fly</b>.
  - title: serverless! no devops requirements .
    img: serverless.png
    description: |
      No more need for the <b>server guy</b> or tackling server configurations . You just stay focused on adding new app features .
  - title: event driven ecosystem
    img: eventdriven.png
    description: |
      Add as many events you want to trigger you microservice's functions . <b>HTTP</b> requests , <b>cron</b> events , <b>real time notifications</b> and much more !
  - title: zero administration backends
    img: zero-administration-backends.png
    description: |
     Get a better architecture on serverless zero-administration compute platforms with code
     that runs into <a target="_blank" href="https://en.wikipedia.org/wiki/Microservices">microservices</a>
     clouds like the popular <a target="_blank" href="https://aws.amazon.com/documentation/lambda/">AWS Lambda</a> make really fast code deployments on microservices clouds by using a special mechanism which will deploy only functions and file packages where code changed from the last deployment .
  - title: blazing fast deployments
    img: blazing-fast-deployments.png
    description: |
     Squeezer it's able to make really fast code deployments on microservices clouds by using a special mechanism which will deploy only functions and file packages where code changed from the last deployment .
  - title: easy code maintenance
    img: easy-code-maintenance.png
    description: |
     Organize and structure your project architecture as you prefer , split your project features on how many microservices you want, sky is the limit !
  - title: staging environments
    img: staging-environments.png
    description: |
     Squeezer offers you the ability to store your microservices into different stages like <b>development</b> ,
     <b>production</b> and more ... like on any other trivial project .
  - title: quick ci implementation
    img: quick-ci-implementation.png
    description: |
     Add only a few lines of configuration into your CI provider to get a both development and production full-available app .
  - title: pay only for what you use
    img: pay-for-usage.png
    description: |
     A strong feature of the <b>microservices</b> is that you pay only for your usage and therefore
     <b>no monthly subscriptions</b> or other fee structures will be applied to you .
     Enjoy developing your projects for any preferred time frame without the pressure of monthly costs .

# technologies
techs:
  - identifier: swagger
    title: Swagger.IO
    url: http://swagger.io/
  - identifier: reactjs
    title: ReactJS
    url: https://facebook.github.io/react/
  - identifier: pug
    title: Pug ( ex-Jade )
    url: https://pugjs.org
  - identifier: js
    title: Javascript
    url: https://www.javascript.com/

clouds:
  - identifier: awslambda
    title: Amazon Web Services ( Lambda )
    url: https://aws.amazon.com/lambda/

# Social networks usernames (many more available: google-plus, flickr, dribbble, pinterest, instagram, tumblr, linkedin, etc.)
social:
  - title: twitter
    url: https://twitter.com/SqueezerIO
  - title: facebook
    url: http://fb.me/Squeezer.IO
  - title: github
    url: https://github.com/SqueezerIO/squeezer-cli

# Postal address (add as many lines as necessary)
address:
  - line: EVERYWHERE
  - line: <b>Open Source</b> baby !

# Credits content
credits: '<a target="_blank" href="http://startbootstrap.com">Start Bootstrap</a>'

# Build settings
highlighter: rouge
kramdown:
    input: GFM
    syntax_highlighter: rouge
markdown: kramdown
permalink: pretty

exclude: [documentation]
keep_files: [documentation]

# Gems
gems:
  - jekyll-paginate-v2
  - jekyll-feed

# Set these options as you need (For more information, check Jekyll's site)
timezone: "Europe/Berlin"
markdown: kramdown
highlighter: rouge
kramdown:
  input: GFM
  syntax_highlighter: rouge

pagination:

  # Site-wide kill switch, disabled here it doesn't run at all
  enabled: true

  # Set to 'true' to enable pagination debugging. This can be enabled in the site config or only for individual pagination pages
  debug: false

  # The default document collection to paginate if nothing is specified ('posts' is default)
  collection: 'posts'

  # How many objects per paginated page, used to be `paginate` (default: 0, means all)
  per_page: 5

  # The permalink structure for the paginated pages (this can be any level deep)
  permalink: '/page/:num/' # Pages are index.html inside this folder (default)
  #permalink: '/page/:num.html' # Pages are simple html files
  #permalink: '/page/:num' # Pages are html files, linked jekyll extensionless permalink style.

  # Optional the title format for the paginated pages (supports :title for original page title, :num for pagination page number, :max for total number of pages)
  title: ':title - page :num'

  # Limit how many pagenated pages to create (default: 0, means all)
  limit: 0

  # Optional, defines the field that the posts should be sorted on (omit to default to 'date')
  sort_field: 'date'

  # Optional, sorts the posts in reverse order (omit to default decending or sort_reverse: true)
  sort_reverse: true

  # Optional, the default category to use, omit or just leave this as 'posts' to get a backwards-compatible behavior (all posts)
  category: 'posts'

  # Optional, the default tag to use, omit to disable
  tag: ''

  # Optional, the default locale to use, omit to disable (depends on a field 'locale' to be specified in the posts,
  # in reality this can be any value, suggested are the Microsoft locale-codes (e.g. en_US, en_GB) or simply the ISO-639 language code )
  locale: ''

 # Optional,omit or set both before and after to zero to disable.
 # Controls how the pagination trail for the paginated pages look like.
  trail:
    before: 2
    after: 2